name: Deploy to Railway Staging

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.deployment_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          echo "$HOME/.railway/bin" >> $GITHUB_PATH

      - name: Deploy to Railway
        id: deploy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway environment staging
          railway up --detach

          # Capture deployment URL
          DEPLOYMENT_URL=$(railway status --json | jq -r '.deployments[0].url')
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: Run database migrations
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway run python backend/scripts/migrate.py
        continue-on-error: true

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        id: health
        run: |
          MAX_RETRIES=10
          RETRY_COUNT=0
          HEALTH_URL="${{ steps.deploy.outputs.deployment_url }}/health"

          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if curl -f -s "$HEALTH_URL" > /dev/null; then
              echo "Health check passed"
              exit 0
            fi
            echo "Health check failed, retrying... ($((RETRY_COUNT + 1))/$MAX_RETRIES)"
            RETRY_COUNT=$((RETRY_COUNT + 1))
            sleep 10
          done

          echo "Health check failed after $MAX_RETRIES attempts"
          exit 1

      - name: Run smoke tests
        env:
          API_BASE_URL: ${{ steps.deploy.outputs.deployment_url }}
        run: |
          curl -f "$API_BASE_URL/health" || exit 1
          curl -f "$API_BASE_URL/version" || exit 1
          echo "Smoke tests passed"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "Deployment to staging succeeded: ${{ steps.deploy.outputs.deployment_url }}"
          else
            echo "Deployment to staging failed"
            exit 1
          fi

  rollback:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: failure()
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          echo "$HOME/.railway/bin" >> $GITHUB_PATH

      - name: Rollback deployment
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway environment staging
          # Railway automatically keeps previous deployments
          # Manual rollback would require Railway dashboard or API
          echo "Please check Railway dashboard for rollback options"
          echo "Previous deployment should still be available"
