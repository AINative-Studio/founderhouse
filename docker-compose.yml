version: '3.9'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: founderhouse-api
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://dev:dev@postgres:5432/founderhouse_dev
      - API_ENV=development
      - LOG_LEVEL=DEBUG
    volumes:
      # Mount source code for hot reload in development
      - ./backend:/app:delegated
      - /app/__pycache__  # Exclude pycache
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - founderhouse-network
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # PostgreSQL with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: founderhouse-db
    environment:
      POSTGRES_DB: founderhouse_dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - founderhouse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d founderhouse_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: founderhouse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - founderhouse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  # pgAdmin for database management (optional, dev only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: founderhouse-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@founderhouse.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - founderhouse-network
    profiles:
      - tools

networks:
  founderhouse-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
